% convert rotation matrix R to quaternion q
function q = rotation_to_quaternion(R)
  if abs(det(R)-1)<0.01
      T = trace(R);
      [argmax, idx] = max([R(1,1), R(2,2), R(3,3), T]);
      switch idx
          case 1
              q1 = sqrt(1+2*R(1,1)-T)/2;
              q = [...
                  q1;...
                  (R(1,2)+R(2,1))/(4*q1);...
                  (R(1,3)+R(3,1))/(4*q1);...
                  (R(2,3)-R(3,2))/(4*q1);...
                  ];
          case 2
              q2 = sqrt(1+2*R(2,2)-T)/2;
              q = [...
                  (R(1,2)+R(2,1))/(4*q2);...
                  q2;...
                  (R(2,3)+R(3,2))/(4*q2);...              
                  (R(3,1)-R(1,3))/(4*q2);...
                  ];
          case 3
              q3 = sqrt(1+2*R(3,3)-T)/2;
              q = [...
                  (R(1,3)+R(3,1))/(4*q3);...
                  (R(2,3)+R(3,2))/(4*q3);...              
                  q3;...
                  (R(1,2)-R(2,1))/(4*q3);...
                  ];
          case 4
              q4 = sqrt(1+T)/2;
              q = [...
                  (R(2,3)-R(3,2))/(4*q4);...
                  (R(3,1)-R(1,3))/(4*q4);...              
                  (R(1,2)-R(2,1))/(4*q4);...
                  q4;...
                  ];
      end
  else
      disp('R is not a rotation matrix')
      q = [1;0;0;0]; 
  end
end