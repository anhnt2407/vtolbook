{"head":492,"savepointDataFileId":"657153087646","savepointListObject":{},"lastEditTimestamp":1587678506846,"diffChangeset":"Z:1>sc*4*5*6+sb*4|1+1$Just some notes on where I can see where we are at now. The way the transformed images show in Rogers video seems to indicate that they are transforming in the reverse direction than what they should be doing relative to the motion of the camera. I am guessing that this is due to the fact that the Rodrigues function Roger is using to calculate the rotation matrix from the accelerometer data is passing an \"active\" rotation matrix (that is what the Rodrigues formula typically outputs). I would test this out but do not currently have access to the RealSense camera at home. Whoever picks up this project next would get significant improvements from either transposing the rotation matrix output or negating the rotation components (cannot remember which occurs in this implementation before being put into the OpenCV transformation function. I think that running the software on one of the towers in the lab instead of Roger's older laptop would also take away any issues resulting from computational limits and lag.\n","invalidDiffChangeset":false,"authorList":{"281951229":{"authorName":"Hayden Morgan","authorCustomAvatarUrl":"/users/281951229/avatar"}},"diffAuthorList":{"281951229":true},"shouldCreateSavepointBeforeApplyingNextRevision":false,"firstKeyRevision":5,"atext":{"text":"Just some notes on where I can see where we are at now. The way the transformed images show in Rogers video seems to indicate that they are transforming in the reverse direction than what they should be doing relative to the motion of the camera. I am guessing that this is due to the fact that the Rodrigues function Roger is using to calculate the rotation matrix from the accelerometer data is passing an \"active\" rotation matrix (that is what the Rodrigues formula typically outputs). I would test this out but do not currently have access to the RealSense camera at home. Whoever picks up this project next would get significant improvements from either transposing the rotation matrix output or negating the rotation components (cannot remember which occurs in this implementation before being put into the OpenCV transformation function. I think that running the software on one of the towers in the lab instead of Roger's older laptop would also take away any issues resulting from computational limits and lag.\n\n","attribs":"*4*5*6+sb*4|1+1|1+1","opCount":3,"appliedAttribsCount":4,"maxAttribsOnSingleOp":3},"pool":{"numToAttrib":{"0":["author","a.4fz9s4pIrvcRKF5l"],"1":["align","left"],"2":["insertorder","first"],"3":["lmkr","1"],"4":["author","281951229"],"5":["font-color-000000","true"],"6":["font-size-medium","true"],"7":["removed","true"]},"nextNum":8},"chatHead":-1,"publicStatus":false,"passwordHash":null,"savedRevisions":[]}